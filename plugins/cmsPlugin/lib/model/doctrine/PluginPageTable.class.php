<?php

/**
 * PluginPageTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginPageTable extends Doctrine_Table
{
	static $pages = array();
    /**
     * Returns an instance of this class.
     *
     * @return object PluginPageTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PluginPage');
    }
	
	public static function getApartat($id)
	{
		switch($id) {
			case 45: return 'khancartro';
			case 46: return 'colaboradors';
			case 49: return 'espectacles';
			case 61: return 'serveis'; 
			case 72: return 'formacio';
			case 120: return '4mono';
		}
	}
	
	public static function getPage($id)
	{
		if (!isset($pages[$id])) $pages[$id] = PageTable::getInstance()->findOneBy('id',$id);
		return $pages[$id];
	}
	
	public function findOneBySlug($slug)
	{
		return self::createQuery("c")
		  ->innerJoin("c.Translation t")
		  ->where("t.slug = ?", $slug)
		  ->andWhere("t.lang = ?",sfContext::getInstance()->getUser()->getCulture())
		  ->fetchOne();
	}
	
	public static function pageIsVisible($slug) {
		$page = PageTable::getInstance()->findOneBy('slug',$slug);
		return ($page!=null && $page->visible);
	}
	
	public static function findRootPages() {
		$q = PageTable::getInstance()
			->createQuery()
			->where('parent_id IS NULL')
			->andWhere('visible = ?',true);
		return $q->execute();
	}
	
	public static function getSubmenu($page_id) {
		$q = PageTable::getInstance()
			->createQuery()
			->where('parent_id = ?', $page_id)
			->andWhere('visible = ?',true);
		return $q->execute();
	}
	
	public function getAvailableParentPages() {
		return $this->createQuery("c")
		  ->innerJoin("c.Translation t")
		  ->where("t.slug IN (\'espectacles-i-produccions\')")
		  ->execute();
	}
	public static function getDefaultParentPageId() {
		$page = PageTable::getInstance()->findOneBySlug('espectacles-i-produccions');
		return ($page->id);
	}
	
}